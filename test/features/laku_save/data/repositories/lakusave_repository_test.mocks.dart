// Mocks generated by Mockito 5.4.4 from annotations
// in lakuemas/test/features/laku_save/data/repositories/lakusave_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:lakuemas/cores/models/base_list_resp.dart' as _i3;
import 'package:lakuemas/cores/models/base_resp.dart' as _i2;
import 'package:lakuemas/cores/services/local_data_source/i_token_local_data_source.dart'
    as _i4;
import 'package:lakuemas/features/laku_save/data/data_sources/interfaces/i_lakusave_remote_data_source.dart'
    as _i6;
import 'package:lakuemas/features/laku_save/data/models/get_transactions_req.dart'
    as _i10;
import 'package:lakuemas/features/laku_save/data/models/gold_deposit_model.dart'
    as _i7;
import 'package:lakuemas/features/laku_save/data/models/lakusave_checkout_req.dart'
    as _i8;
import 'package:lakuemas/features/laku_save/data/models/transaction_model.dart'
    as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseResp_0<T> extends _i1.SmartFake implements _i2.BaseResp<T> {
  _FakeBaseResp_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseListResp_1<T> extends _i1.SmartFake
    implements _i3.BaseListResp<T> {
  _FakeBaseListResp_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ITokenLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockITokenLocalDataSource extends _i1.Mock
    implements _i4.ITokenLocalDataSource {
  MockITokenLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> saveAccessToken(String? accToken) => (super.noSuchMethod(
        Invocation.method(
          #saveAccessToken,
          [accToken],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getAccessToken() => (super.noSuchMethod(
        Invocation.method(
          #getAccessToken,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> saveRefreshToken(String? refreshToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveRefreshToken,
          [refreshToken],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getRefreshToken() => (super.noSuchMethod(
        Invocation.method(
          #getRefreshToken,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);
}

/// A class which mocks [ILakusaveRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockILakusaveRemoteDataSource extends _i1.Mock
    implements _i6.ILakusaveRemoteDataSource {
  MockILakusaveRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.BaseResp<_i7.GoldDepositModel>> getMasterDataLakusave({
    String? accessToken,
    String? refreshToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMasterDataLakusave,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
          },
        ),
        returnValue: _i5.Future<_i2.BaseResp<_i7.GoldDepositModel>>.value(
            _FakeBaseResp_0<_i7.GoldDepositModel>(
          this,
          Invocation.method(
            #getMasterDataLakusave,
            [],
            {
              #accessToken: accessToken,
              #refreshToken: refreshToken,
            },
          ),
        )),
      ) as _i5.Future<_i2.BaseResp<_i7.GoldDepositModel>>);

  @override
  _i5.Future<_i2.BaseResp<dynamic>> checkout({
    String? accessToken,
    String? refreshToken,
    required _i8.LakusaveCheckoutReq? request,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkout,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
            #request: request,
          },
        ),
        returnValue:
            _i5.Future<_i2.BaseResp<dynamic>>.value(_FakeBaseResp_0<dynamic>(
          this,
          Invocation.method(
            #checkout,
            [],
            {
              #accessToken: accessToken,
              #refreshToken: refreshToken,
              #request: request,
            },
          ),
        )),
      ) as _i5.Future<_i2.BaseResp<dynamic>>);

  @override
  _i5.Future<_i2.BaseResp<dynamic>> cancel({
    String? accessToken,
    String? refreshToken,
    String? transactionCode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #cancel,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
            #transactionCode: transactionCode,
          },
        ),
        returnValue:
            _i5.Future<_i2.BaseResp<dynamic>>.value(_FakeBaseResp_0<dynamic>(
          this,
          Invocation.method(
            #cancel,
            [],
            {
              #accessToken: accessToken,
              #refreshToken: refreshToken,
              #transactionCode: transactionCode,
            },
          ),
        )),
      ) as _i5.Future<_i2.BaseResp<dynamic>>);

  @override
  _i5.Future<_i3.BaseListResp<_i9.TransactionModel>> getTransactions({
    String? accessToken,
    String? refreshToken,
    required _i10.GetTransactionsReq? request,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactions,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
            #request: request,
          },
        ),
        returnValue: _i5.Future<_i3.BaseListResp<_i9.TransactionModel>>.value(
            _FakeBaseListResp_1<_i9.TransactionModel>(
          this,
          Invocation.method(
            #getTransactions,
            [],
            {
              #accessToken: accessToken,
              #refreshToken: refreshToken,
              #request: request,
            },
          ),
        )),
      ) as _i5.Future<_i3.BaseListResp<_i9.TransactionModel>>);

  @override
  _i5.Future<_i2.BaseResp<dynamic>> updateExtend({
    String? accessToken,
    String? refreshToken,
    int? extendId,
    String? accountNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateExtend,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
            #extendId: extendId,
            #accountNumber: accountNumber,
          },
        ),
        returnValue:
            _i5.Future<_i2.BaseResp<dynamic>>.value(_FakeBaseResp_0<dynamic>(
          this,
          Invocation.method(
            #updateExtend,
            [],
            {
              #accessToken: accessToken,
              #refreshToken: refreshToken,
              #extendId: extendId,
              #accountNumber: accountNumber,
            },
          ),
        )),
      ) as _i5.Future<_i2.BaseResp<dynamic>>);

  @override
  _i5.Future<String?> getAbout({
    String? accessToken,
    String? refreshToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAbout,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
          },
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);
}
