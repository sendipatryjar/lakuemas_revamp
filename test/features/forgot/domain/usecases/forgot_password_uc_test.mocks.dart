// Mocks generated by Mockito 5.4.4 from annotations
// in lakuemas/test/features/forgot/domain/usecases/forgot_password_uc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:lakuemas/cores/errors/app_failure.dart' as _i5;
import 'package:lakuemas/cores/models/base_resp.dart' as _i6;
import 'package:lakuemas/features/forgot/data/models/verify_otp_forgot_model.dart'
    as _i7;
import 'package:lakuemas/features/forgot/domain/repositories/i_forgot_password_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IForgotPasswordRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIForgotPasswordRepository extends _i1.Mock
    implements _i3.IForgotPasswordRepository {
  MockIForgotPasswordRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, bool>> forgot(
    String? newPassword,
    String? confirmPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgot,
          [
            newPassword,
            confirmPassword,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.AppFailure, bool>>.value(
            _FakeEither_0<_i5.AppFailure, bool>(
          this,
          Invocation.method(
            #forgot,
            [
              newPassword,
              confirmPassword,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, bool>> sendOtpForgot({
    String? username,
    int? otpType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendOtpForgot,
          [],
          {
            #username: username,
            #otpType: otpType,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.AppFailure, bool>>.value(
            _FakeEither_0<_i5.AppFailure, bool>(
          this,
          Invocation.method(
            #sendOtpForgot,
            [],
            {
              #username: username,
              #otpType: otpType,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, _i6.BaseResp<_i7.VerifyOtpForgotModel>>>
      verifyOtpForgot({
    String? username,
    String? otpCode,
    int? otpType,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #verifyOtpForgot,
              [],
              {
                #username: username,
                #otpCode: otpCode,
                #otpType: otpType,
              },
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.AppFailure,
                        _i6.BaseResp<_i7.VerifyOtpForgotModel>>>.value(
                _FakeEither_0<_i5.AppFailure,
                    _i6.BaseResp<_i7.VerifyOtpForgotModel>>(
              this,
              Invocation.method(
                #verifyOtpForgot,
                [],
                {
                  #username: username,
                  #otpCode: otpCode,
                  #otpType: otpType,
                },
              ),
            )),
          ) as _i4.Future<
              _i2
              .Either<_i5.AppFailure, _i6.BaseResp<_i7.VerifyOtpForgotModel>>>);
}
