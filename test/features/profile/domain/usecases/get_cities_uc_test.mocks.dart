// Mocks generated by Mockito 5.4.4 from annotations
// in lakuemas/test/features/profile/domain/usecases/get_cities_uc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:lakuemas/cores/errors/app_failure.dart' as _i5;
import 'package:lakuemas/features/profile/domain/entities/city_entity.dart'
    as _i8;
import 'package:lakuemas/features/profile/domain/entities/country_entity.dart'
    as _i6;
import 'package:lakuemas/features/profile/domain/entities/detail_district_entity.dart'
    as _i10;
import 'package:lakuemas/features/profile/domain/entities/district_entity.dart'
    as _i9;
import 'package:lakuemas/features/profile/domain/entities/province_entity.dart'
    as _i7;
import 'package:lakuemas/features/profile/domain/repositories/i_address_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IAddressRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAddressRepository extends _i1.Mock
    implements _i3.IAddressRepository {
  MockIAddressRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, List<_i6.CountryEntity>>> getCountries({
    int? limit,
    int? page,
    String? sortBy,
    String? orderBy,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCountries,
          [],
          {
            #limit: limit,
            #page: page,
            #sortBy: sortBy,
            #orderBy: orderBy,
          },
        ),
        returnValue: _i4
            .Future<_i2.Either<_i5.AppFailure, List<_i6.CountryEntity>>>.value(
            _FakeEither_0<_i5.AppFailure, List<_i6.CountryEntity>>(
          this,
          Invocation.method(
            #getCountries,
            [],
            {
              #limit: limit,
              #page: page,
              #sortBy: sortBy,
              #orderBy: orderBy,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, List<_i6.CountryEntity>>>);

  @override
  _i4.Future<
      _i2.Either<_i5.AppFailure, List<_i7.ProvinceEntity>>> getProvinces({
    int? limit,
    int? page,
    String? sortBy,
    String? orderBy,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProvinces,
          [],
          {
            #limit: limit,
            #page: page,
            #sortBy: sortBy,
            #orderBy: orderBy,
          },
        ),
        returnValue: _i4
            .Future<_i2.Either<_i5.AppFailure, List<_i7.ProvinceEntity>>>.value(
            _FakeEither_0<_i5.AppFailure, List<_i7.ProvinceEntity>>(
          this,
          Invocation.method(
            #getProvinces,
            [],
            {
              #limit: limit,
              #page: page,
              #sortBy: sortBy,
              #orderBy: orderBy,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, List<_i7.ProvinceEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, List<_i8.CityEntity>>> getCities({
    int? limit,
    int? page,
    int? provinceId,
    String? sortBy,
    String? orderBy,
    String? keyword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCities,
          [],
          {
            #limit: limit,
            #page: page,
            #provinceId: provinceId,
            #sortBy: sortBy,
            #orderBy: orderBy,
            #keyword: keyword,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.AppFailure, List<_i8.CityEntity>>>.value(
                _FakeEither_0<_i5.AppFailure, List<_i8.CityEntity>>(
          this,
          Invocation.method(
            #getCities,
            [],
            {
              #limit: limit,
              #page: page,
              #provinceId: provinceId,
              #sortBy: sortBy,
              #orderBy: orderBy,
              #keyword: keyword,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, List<_i8.CityEntity>>>);

  @override
  _i4.Future<
      _i2.Either<_i5.AppFailure, List<_i9.DistrictEntity>>> getDistricts({
    int? limit,
    int? page,
    int? cityId,
    String? sortBy,
    String? orderBy,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDistricts,
          [],
          {
            #limit: limit,
            #page: page,
            #cityId: cityId,
            #sortBy: sortBy,
            #orderBy: orderBy,
          },
        ),
        returnValue: _i4
            .Future<_i2.Either<_i5.AppFailure, List<_i9.DistrictEntity>>>.value(
            _FakeEither_0<_i5.AppFailure, List<_i9.DistrictEntity>>(
          this,
          Invocation.method(
            #getDistricts,
            [],
            {
              #limit: limit,
              #page: page,
              #cityId: cityId,
              #sortBy: sortBy,
              #orderBy: orderBy,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, List<_i9.DistrictEntity>>>);

  @override
  _i4.Future<
      _i2.Either<_i5.AppFailure, _i10.DetailDistrictEntity>> getDetailDistrict(
          {int? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailDistrict,
          [],
          {#id: id},
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.AppFailure, _i10.DetailDistrictEntity>>.value(
            _FakeEither_0<_i5.AppFailure, _i10.DetailDistrictEntity>(
          this,
          Invocation.method(
            #getDetailDistrict,
            [],
            {#id: id},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, _i10.DetailDistrictEntity>>);
}
