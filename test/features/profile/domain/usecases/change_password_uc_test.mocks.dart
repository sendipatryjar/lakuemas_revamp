// Mocks generated by Mockito 5.4.4 from annotations
// in lakuemas/test/features/profile/domain/usecases/change_password_uc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:lakuemas/cores/errors/app_failure.dart' as _i5;
import 'package:lakuemas/features/_core/others/domain/entities/terms_and_conditions_entity.dart'
    as _i8;
import 'package:lakuemas/features/_core/user/domain/entities/user_data_entity.dart'
    as _i6;
import 'package:lakuemas/features/profile/domain/entities/update_address_entity.dart'
    as _i7;
import 'package:lakuemas/features/profile/domain/repositories/i_profile_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IProfileRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIProfileRepository extends _i1.Mock
    implements _i3.IProfileRepository {
  MockIProfileRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, _i6.UserDataEntity?>> getUserData(
          {bool? isFromLocal = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserData,
          [],
          {#isFromLocal: isFromLocal},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.AppFailure, _i6.UserDataEntity?>>.value(
                _FakeEither_0<_i5.AppFailure, _i6.UserDataEntity?>(
          this,
          Invocation.method(
            #getUserData,
            [],
            {#isFromLocal: isFromLocal},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, _i6.UserDataEntity?>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, bool>> updateUserData({
    String? fullName,
    String? gender,
    String? cob,
    String? pob,
    String? dob,
    String? maritalStatus,
    String? religion,
    String? occupation,
    String? income,
    String? purpose,
    String? email,
    String? phoneNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserData,
          [],
          {
            #fullName: fullName,
            #gender: gender,
            #cob: cob,
            #pob: pob,
            #dob: dob,
            #maritalStatus: maritalStatus,
            #religion: religion,
            #occupation: occupation,
            #income: income,
            #purpose: purpose,
            #email: email,
            #phoneNumber: phoneNumber,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.AppFailure, bool>>.value(
            _FakeEither_0<_i5.AppFailure, bool>(
          this,
          Invocation.method(
            #updateUserData,
            [],
            {
              #fullName: fullName,
              #gender: gender,
              #cob: cob,
              #pob: pob,
              #dob: dob,
              #maritalStatus: maritalStatus,
              #religion: religion,
              #occupation: occupation,
              #income: income,
              #purpose: purpose,
              #email: email,
              #phoneNumber: phoneNumber,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, bool>> updateAddress(
          {List<_i7.UpdateAddressEntity>? addressDatas}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAddress,
          [],
          {#addressDatas: addressDatas},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.AppFailure, bool>>.value(
            _FakeEither_0<_i5.AppFailure, bool>(
          this,
          Invocation.method(
            #updateAddress,
            [],
            {#addressDatas: addressDatas},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, bool>> changePassword({
    String? oldPassword,
    String? newPassword,
    String? newPasswordConfirmation,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePassword,
          [],
          {
            #oldPassword: oldPassword,
            #newPassword: newPassword,
            #newPasswordConfirmation: newPasswordConfirmation,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.AppFailure, bool>>.value(
            _FakeEither_0<_i5.AppFailure, bool>(
          this,
          Invocation.method(
            #changePassword,
            [],
            {
              #oldPassword: oldPassword,
              #newPassword: newPassword,
              #newPasswordConfirmation: newPasswordConfirmation,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, bool>> changePin({
    String? oldPin,
    String? newPin,
    String? newPinConfirmation,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePin,
          [],
          {
            #oldPin: oldPin,
            #newPin: newPin,
            #newPinConfirmation: newPinConfirmation,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.AppFailure, bool>>.value(
            _FakeEither_0<_i5.AppFailure, bool>(
          this,
          Invocation.method(
            #changePin,
            [],
            {
              #oldPin: oldPin,
              #newPin: newPin,
              #newPinConfirmation: newPinConfirmation,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, _i8.TermsAndConditionsEntity>>
      getTermsAndConditionsProfile() => (super.noSuchMethod(
            Invocation.method(
              #getTermsAndConditionsProfile,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.AppFailure,
                        _i8.TermsAndConditionsEntity>>.value(
                _FakeEither_0<_i5.AppFailure, _i8.TermsAndConditionsEntity>(
              this,
              Invocation.method(
                #getTermsAndConditionsProfile,
                [],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.AppFailure, _i8.TermsAndConditionsEntity>>);
}
