// Mocks generated by Mockito 5.4.4 from annotations
// in lakuemas/test/features/register/data/repositories/register_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:lakuemas/cores/models/base_resp.dart' as _i2;
import 'package:lakuemas/features/_core/others/data/models/terms_and_conditions_model.dart'
    as _i7;
import 'package:lakuemas/features/register/data/data_source/interfaces/i_register_remote_data_source.dart'
    as _i3;
import 'package:lakuemas/features/register/data/models/register_model.dart'
    as _i5;
import 'package:lakuemas/features/register/data/models/register_req.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseResp_0<T> extends _i1.SmartFake implements _i2.BaseResp<T> {
  _FakeBaseResp_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IRegisterRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockIRegisterRemoteDataSource extends _i1.Mock
    implements _i3.IRegisterRemoteDataSource {
  MockIRegisterRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.BaseResp<_i5.RegisterModel>> register(
          _i6.RegisterReq? registerReq) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [registerReq],
        ),
        returnValue: _i4.Future<_i2.BaseResp<_i5.RegisterModel>>.value(
            _FakeBaseResp_0<_i5.RegisterModel>(
          this,
          Invocation.method(
            #register,
            [registerReq],
          ),
        )),
      ) as _i4.Future<_i2.BaseResp<_i5.RegisterModel>>);

  @override
  _i4.Future<_i2.BaseResp<_i7.TermsAndConditionsModel>>
      getTermsAndConditionsRegister() => (super.noSuchMethod(
            Invocation.method(
              #getTermsAndConditionsRegister,
              [],
            ),
            returnValue:
                _i4.Future<_i2.BaseResp<_i7.TermsAndConditionsModel>>.value(
                    _FakeBaseResp_0<_i7.TermsAndConditionsModel>(
              this,
              Invocation.method(
                #getTermsAndConditionsRegister,
                [],
              ),
            )),
          ) as _i4.Future<_i2.BaseResp<_i7.TermsAndConditionsModel>>);

  @override
  _i4.Future<String?> getPrivacyPolicyRegister() => (super.noSuchMethod(
        Invocation.method(
          #getPrivacyPolicyRegister,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
}
