// Mocks generated by Mockito 5.4.4 from annotations
// in lakuemas/test/features/register/domain/usecase/register_uc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:lakuemas/cores/errors/app_failure.dart' as _i5;
import 'package:lakuemas/features/_core/others/domain/entities/terms_and_conditions_entity.dart'
    as _i7;
import 'package:lakuemas/features/register/domain/entities/register_entity.dart'
    as _i6;
import 'package:lakuemas/features/register/domain/repositories/i_register_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IRegisterRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIRegisterRepository extends _i1.Mock
    implements _i3.IRegisterRepository {
  MockIRegisterRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, _i6.RegisterEntity>> register({
    required String? fullName,
    required String? phoneNumber,
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #fullName: fullName,
            #phoneNumber: phoneNumber,
            #email: email,
            #password: password,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.AppFailure, _i6.RegisterEntity>>.value(
                _FakeEither_0<_i5.AppFailure, _i6.RegisterEntity>(
          this,
          Invocation.method(
            #register,
            [],
            {
              #fullName: fullName,
              #phoneNumber: phoneNumber,
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, _i6.RegisterEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, _i7.TermsAndConditionsEntity>>
      getTermsAndConditionsRegister() => (super.noSuchMethod(
            Invocation.method(
              #getTermsAndConditionsRegister,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.AppFailure,
                        _i7.TermsAndConditionsEntity>>.value(
                _FakeEither_0<_i5.AppFailure, _i7.TermsAndConditionsEntity>(
              this,
              Invocation.method(
                #getTermsAndConditionsRegister,
                [],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.AppFailure, _i7.TermsAndConditionsEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, String?>> getPrivacyPolicyRegister() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrivacyPolicyRegister,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.AppFailure, String?>>.value(
            _FakeEither_0<_i5.AppFailure, String?>(
          this,
          Invocation.method(
            #getPrivacyPolicyRegister,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, String?>>);
}
