// Mocks generated by Mockito 5.4.2 from annotations
// in lakuemas/test/features/account_balance/data/repositories/account_balance_repository_uc.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:lakuemas/cores/models/base_list_resp.dart' as _i2;
import 'package:lakuemas/cores/models/base_resp.dart' as _i3;
import 'package:lakuemas/cores/services/local_data_source/i_token_local_data_source.dart'
    as _i4;
import 'package:lakuemas/features/_core/transaction/data/models/price_model.dart'
    as _i9;
import 'package:lakuemas/features/account_balance/data/data_sources/interfaces/i_account_balance_remote_data_source.dart'
    as _i6;
import 'package:lakuemas/features/account_balance/data/models/account_balance_faq_model.dart'
    as _i8;
import 'package:lakuemas/features/account_balance/data/models/bank_me_model.dart'
    as _i10;
import 'package:lakuemas/features/account_balance/data/models/mutation_model.dart'
    as _i7;
import 'package:lakuemas/features/account_balance/data/models/withdrawal_model.dart'
    as _i11;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseListResp_0<T> extends _i1.SmartFake
    implements _i2.BaseListResp<T> {
  _FakeBaseListResp_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseResp_1<T> extends _i1.SmartFake implements _i3.BaseResp<T> {
  _FakeBaseResp_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ITokenLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockITokenLocalDataSource extends _i1.Mock
    implements _i4.ITokenLocalDataSource {
  MockITokenLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> saveAccessToken(String? accToken) => (super.noSuchMethod(
        Invocation.method(
          #saveAccessToken,
          [accToken],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<String?> getAccessToken() => (super.noSuchMethod(
        Invocation.method(
          #getAccessToken,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);
  @override
  _i5.Future<void> saveRefreshToken(String? refreshToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveRefreshToken,
          [refreshToken],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<String?> getRefreshToken() => (super.noSuchMethod(
        Invocation.method(
          #getRefreshToken,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);
}

/// A class which mocks [IAccountBalanceRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAccountBalanceRemoteDataSource extends _i1.Mock
    implements _i6.IAccountBalanceRemoteDataSource {
  MockIAccountBalanceRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.BaseListResp<_i7.MutationModel>> getMutations({
    String? accessToken,
    String? refreshToken,
    int? status,
    String? period,
    String? startDate,
    String? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMutations,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
            #status: status,
            #period: period,
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue: _i5.Future<_i2.BaseListResp<_i7.MutationModel>>.value(
            _FakeBaseListResp_0<_i7.MutationModel>(
          this,
          Invocation.method(
            #getMutations,
            [],
            {
              #accessToken: accessToken,
              #refreshToken: refreshToken,
              #status: status,
              #period: period,
              #startDate: startDate,
              #endDate: endDate,
            },
          ),
        )),
      ) as _i5.Future<_i2.BaseListResp<_i7.MutationModel>>);
  @override
  _i5.Future<_i2.BaseListResp<_i8.AccountBalanceFaqModel>> getFaq({
    String? accessToken,
    String? refreshToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFaq,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
          },
        ),
        returnValue:
            _i5.Future<_i2.BaseListResp<_i8.AccountBalanceFaqModel>>.value(
                _FakeBaseListResp_0<_i8.AccountBalanceFaqModel>(
          this,
          Invocation.method(
            #getFaq,
            [],
            {
              #accessToken: accessToken,
              #refreshToken: refreshToken,
            },
          ),
        )),
      ) as _i5.Future<_i2.BaseListResp<_i8.AccountBalanceFaqModel>>);
  @override
  _i5.Future<_i3.BaseResp<_i9.PriceModel>> getPrice({
    String? accessToken,
    String? refreshToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrice,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
          },
        ),
        returnValue: _i5.Future<_i3.BaseResp<_i9.PriceModel>>.value(
            _FakeBaseResp_1<_i9.PriceModel>(
          this,
          Invocation.method(
            #getPrice,
            [],
            {
              #accessToken: accessToken,
              #refreshToken: refreshToken,
            },
          ),
        )),
      ) as _i5.Future<_i3.BaseResp<_i9.PriceModel>>);
  @override
  _i5.Future<_i3.BaseResp<_i10.BankMeModel>> getBankMe({
    String? accessToken,
    String? refreshToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBankMe,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
          },
        ),
        returnValue: _i5.Future<_i3.BaseResp<_i10.BankMeModel>>.value(
            _FakeBaseResp_1<_i10.BankMeModel>(
          this,
          Invocation.method(
            #getBankMe,
            [],
            {
              #accessToken: accessToken,
              #refreshToken: refreshToken,
            },
          ),
        )),
      ) as _i5.Future<_i3.BaseResp<_i10.BankMeModel>>);
  @override
  _i5.Future<_i3.BaseResp<_i11.WithdrawalModel>> withdraw({
    String? accessToken,
    String? refreshToken,
    int? amount,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #withdraw,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
            #amount: amount,
          },
        ),
        returnValue: _i5.Future<_i3.BaseResp<_i11.WithdrawalModel>>.value(
            _FakeBaseResp_1<_i11.WithdrawalModel>(
          this,
          Invocation.method(
            #withdraw,
            [],
            {
              #accessToken: accessToken,
              #refreshToken: refreshToken,
              #amount: amount,
            },
          ),
        )),
      ) as _i5.Future<_i3.BaseResp<_i11.WithdrawalModel>>);
}
