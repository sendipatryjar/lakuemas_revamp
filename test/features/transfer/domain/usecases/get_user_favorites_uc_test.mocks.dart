// Mocks generated by Mockito 5.4.4 from annotations
// in lakuemas/test/features/transfer/domain/usecases/get_user_favorites_uc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:lakuemas/cores/errors/app_failure.dart' as _i5;
import 'package:lakuemas/features/_core/user/domain/entities/user_favorite_entity.dart'
    as _i8;
import 'package:lakuemas/features/transfer/domain/entities/transfer_charge_entity.dart'
    as _i6;
import 'package:lakuemas/features/transfer/domain/entities/transfer_checkout_entity.dart'
    as _i7;
import 'package:lakuemas/features/transfer/domain/repositories/i_transfer_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ITransferRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockITransferRepository extends _i1.Mock
    implements _i3.ITransferRepository {
  MockITransferRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<
      _i2.Either<_i5.AppFailure, _i6.TransferChargeEntity>> transferCharge({
    required bool? isAddFavorite,
    required double? goldWeight,
    required String? accountNumber,
    String? note,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transferCharge,
          [],
          {
            #isAddFavorite: isAddFavorite,
            #goldWeight: goldWeight,
            #accountNumber: accountNumber,
            #note: note,
          },
        ),
        returnValue: _i4
            .Future<_i2.Either<_i5.AppFailure, _i6.TransferChargeEntity>>.value(
            _FakeEither_0<_i5.AppFailure, _i6.TransferChargeEntity>(
          this,
          Invocation.method(
            #transferCharge,
            [],
            {
              #isAddFavorite: isAddFavorite,
              #goldWeight: goldWeight,
              #accountNumber: accountNumber,
              #note: note,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, _i6.TransferChargeEntity>>);

  @override
  _i4.Future<
      _i2.Either<_i5.AppFailure, _i7.TransferCheckoutEntity>> transferCheckout(
          {required String? transactionKey}) =>
      (super.noSuchMethod(
        Invocation.method(
          #transferCheckout,
          [],
          {#transactionKey: transactionKey},
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.AppFailure, _i7.TransferCheckoutEntity>>.value(
            _FakeEither_0<_i5.AppFailure, _i7.TransferCheckoutEntity>(
          this,
          Invocation.method(
            #transferCheckout,
            [],
            {#transactionKey: transactionKey},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppFailure, _i7.TransferCheckoutEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.AppFailure, List<_i8.UserFavoriteEntity>>>
      userFavorites() => (super.noSuchMethod(
            Invocation.method(
              #userFavorites,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.AppFailure,
                        List<_i8.UserFavoriteEntity>>>.value(
                _FakeEither_0<_i5.AppFailure, List<_i8.UserFavoriteEntity>>(
              this,
              Invocation.method(
                #userFavorites,
                [],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.AppFailure, List<_i8.UserFavoriteEntity>>>);
}
